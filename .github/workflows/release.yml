# This is a basic workflow that is manually triggered

name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Install Nativefier
        run: npm install -g nativefier
      - name: Setup Dependencies
        run: sudo apt-get update && sudo apt-get --yes install wine64 imagemagick libfuse2
      - name: Build YouTubeTV
        run: |
          bash build.sh youtube
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: First Release
          release_name: Release 0.0.1
          body: |
            Changes in this Release:
            - Added YouTubeTV
          draft: false
          prerelease: false
      - name: Upload Zip Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID
          asset_path: ./export/YouTubeTV.zip
          asset_name: YouTubeTV.zip
          asset_content_type: application/zip
      - name: Upload AppImage Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID
          asset_path: ./export/YouTubeTV.AppImage
          asset_name: YouTubeTV.AppImage
          asset_content_type: application/AppImage
